package uwaterloo.fydp.aggregator;

import java.text.DecimalFormat;
import java.util.Random;

import uwaterloo.fydp.aggregator.MyLocation;
import uwaterloo.fydp.aggregator.data.ListingsCursorAdapter;
import uwaterloo.fydp.aggregator.data.ListingsTable;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import android.app.LoaderManager;
import android.content.Intent;
import android.content.Loader;
import android.database.Cursor;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.CursorAdapter;

public class ListingsMapActivityNew extends FragmentActivity {

	private GoogleMap mMap;
	private MyLocation myLocation;
	private Cursor mCursor;
	private ListingsTable lt;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.listings_map_activity_new);
		getActionBar().setDisplayHomeAsUpEnabled(true);
		
		//Create new MyLocation object to get location before initiating map
		myLocation = new MyLocation(this);
		
		setUpMapIfNeeded();
	}

	@Override
	protected void onResume() {
		super.onResume();
		setUpMapIfNeeded();
	}
	
	@Override
	protected void onStop() {
		super.onStop();
		mMap.clear();
	}

	private void setUpMapIfNeeded() {
		// Do a null check to confirm that we have not already instantiated the map.
		if (mMap == null) {
			// Try to obtain the map from the SupportMapFragment.
			mMap = ((SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map)).getMap();
			// Check if we were successful in obtaining the map.
			if (mMap != null) {
				setUpMap();   
			}
			//This is how you register the LocationSource
			mMap.setLocationSource(myLocation);
			mMap.setMyLocationEnabled(true);
		}
	}

	private void setUpMap() {
		mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myLocation.getLatLng(),15));
		mMap.addMarker(new MarkerOptions().position(new LatLng(43.46136, -80.53318)).title("Marker 1").snippet("This is a test snippet."));
		mMap.addMarker(new MarkerOptions().position(new LatLng(43.46385, -80.5230)).title("Marker 2").snippet("This is a test snippet. Balls."));
		
		//Create cursor if db exists
		DecimalFormat df = new DecimalFormat("#0.00");
		lt = ListingsTable.getInstance(getApplicationContext());
		Cursor mCursor = lt.getListings();
		mCursor.moveToFirst();
		
		while (!mCursor.isAfterLast()) {
			String mTitle = mCursor.getString(mCursor.getColumnIndex(ListingsTable.KEY_TITLE));
			String mDesc = mCursor.getString(mCursor.getColumnIndex(ListingsTable.KEY_DESCRIPTION));
			double mPrice = mCursor.getDouble(mCursor.getColumnIndex(ListingsTable.KEY_PRICE));
			String mUrl = mCursor.getString(mCursor.getColumnIndex(ListingsTable.KEY_URL));
//			String mTitle = mCursor.getString(1);
//			String mDesc = mCursor.getString(2);
			double mLat = mCursor.getDouble(mCursor.getColumnIndex(ListingsTable.KEY_LATITUDE));
			double mLng = mCursor.getDouble(mCursor.getColumnIndex(ListingsTable.KEY_LONGITUDE));
			
			//temp random lat long for testing
//			Random r = new Random();
//			double lat1 = 43.4574;
//			double lat2 = 43.4562;
//			double lng2 = -80.5233;
//			double lng1 = -80.4906;
//			double mLat = lat1 + (lat2 - lat1) * r.nextDouble();
//			double mLng = lng1 + (lng2 - lng1) * r.nextDouble();
			
			mMap.addMarker(new MarkerOptions().position(new LatLng(mLat,mLng)).title(mTitle + ": $" + df.format(mPrice)).snippet(mDesc));
			
			mCursor.moveToNext();
		}
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
	    MenuInflater inflater = getMenuInflater();
	    inflater.inflate(R.menu.listings_map_activity, menu);
	    return true;
	}
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
	    switch (item.getItemId()) {
	        case android.R.id.home:
	            // app icon in action bar clicked; go home
	            Intent intent = new Intent(this, ListingsListActivity.class);
	            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
	            startActivity(intent);
	            return true;
	    }
	    return super.onOptionsItemSelected(item);
	}
}

